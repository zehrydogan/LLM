# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OkpIxO3os1Mw6gZhBiahOhIy7oKJG32v
"""

import os
import random
from PIL import Image
from keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array
class PotatoDiseaseImageAugmentor:
    def __init__(self, data_dir, output_dir, disease='Black Scurf'):
        self.data_dir = data_dir
        self.output_dir = output_dir
        self.disease = disease
        self.datagen = ImageDataGenerator(
            rotation_range=40,
            width_shift_range=0.2,
            height_shift_range=0.2,
            shear_range=0.2,
            zoom_range=0.2,
            horizontal_flip=True,
            fill_mode='nearest'
        )
    def augment_image(self):
        disease_dir = os.path.join(self.data_dir, self.disease)
        images = os.listdir(disease_dir)
        if not images:
            raise Exception(f"No images found in {disease_dir}")
        img_name = random.choice(images)
        img_path = os.path.join(disease_dir, img_name)
        img = load_img(img_path)
        img_array = img_to_array(img)
        img_array = img_array.reshape((1,) + img_array.shape)
        i = 0
        for batch in self.datagen.flow(
            img_array,
            batch_size=1,
            save_to_dir=self.output_dir,
            save_prefix='aug',
            save_format='jpeg'
        ):
            i += 1
            if i > 20:
                break
data_directory = 'Data'
output_directory = 'output'
if not os.path.exists(output_directory):
    os.makedirs(output_directory)
disease_class = 'Black Scurf'
augmentor = PotatoDiseaseImageAugmentor(
    data_directory,
    output_directory,
    disease=disease_class
)
augmentor.augment_image()